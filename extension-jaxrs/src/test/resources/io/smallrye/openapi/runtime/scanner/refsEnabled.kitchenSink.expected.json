{
  "components": {
    "schemas": {
      "BazEnum": {
        "type": "string",
        "enum": [
          "Gold",
          "Green"
        ]
      },
      "Baz": {
        "type": "object",
        "properties": {
          "an_integer_value": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "Bar": {
        "type": "object",
        "properties": {
          "theQ": {
            
          },
          "theT": {
            "$ref": "#/components/schemas/Baz"
          },
          "ultimateTShouldBeQ": {
            
          }
        }
      },
      "Airline": {
        "required": [
          "contactPhone",
          "name"
        ],
        "type": "object",
        "properties": {
          "contactPhone": {
            "type": "string",
            "examples" : [ "1-888-1234-567" ]
          },
          "name": {
            "type": "string",
            "examples" : [ "Acme Air" ]
          }
        },
        "additionalProperties": true
      },
      "Flight": {
        "required": [
          "airline",
          "airportFrom",
          "airportTo",
          "dateTime",
          "number",
          "price",
          "status"
        ],
        "type": "object",
        "properties": {
          "airline": {
            "$ref": "#/components/schemas/Airline"
          },
          "airportFrom": {
            "type": "string",
            "examples" : [ "YYZ" ]
          },
          "airportTo": {
            "type": "string",
            "examples" : [ "LAX" ]
          },
          "dateTime": {
            "pattern": "dateTime",
            "type": "string",
            "examples" : [ "2016-03-05 18:00" ]
          },
          "number": {
            "type": "string",
            "examples" : [ "AC190" ]
          },
          "price": {
            "type": "string",
            "examples" : [ "US$350" ]
          },
          "status": {
            "type": "string",
            "examples" : [ "On Schedule" ]
          }
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "CreditCard": {
        "required": [
          "cardNumber",
          "cardholderName",
          "cvv",
          "expiryDate",
          "issuer"
        ],
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "examples" : [ "**********1234" ]
          },
          "cardholderName": {
            "type": "string",
            "examples" : [ "Joe Smith" ]
          },
          "cvv": {
            "type": "string",
            "examples" : [ "0322" ]
          },
          "expiryDate": {
            "type": "string",
            "examples" : [ "04/19" ]
          },
          "issuer": {
            "type": "string",
            "examples" : [ "VISA" ]
          }
        },
        "additionalProperties": false
      },
      "Booking": {
        "required": [
          "airMiles",
          "creditCard",
          "departtureFlight",
          "returningFlight",
          "seatPreference"
        ],
        "type": "object",
        "properties": {
          "airMiles": {
            "type": "string",
            "examples" : [ "32126319" ]
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCard"
          },
          "departtureFlight": {
            "$ref": "#/components/schemas/Flight"
          },
          "returningFlight": {
            "$ref": "#/components/schemas/Flight"
          },
          "seatPreference": {
            "type": "string",
            "examples" : [ "window" ]
          }
        }
      },
      "Bazzy": {
        "type": "object",
        "properties": {
          "hellofrombazzy": {
            "type": "string"
          },
          "an_integer_value": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "Foo": {
        "type": "object",
        "properties": {
          "theQ": {
            "type": "string"
          },
          "theT": {
            "$ref": "#/components/schemas/Bazzy"
          },
          "ultimateTShouldBeQ": {
            "type": "string"
          }
        }
      },
      "FuzzStringObject": {
        "type": "object",
        "properties": {
          "qAgain": {
            
          },
          "qAgain3": {
            
          },
          "qValue": {
            "description": "Ah, Q, my favourite variable!"
          },
          "tAgain2": {
            "type": "string"
          },
          "tAgain4": {
            "type": "string"
          },
          "tValue": {
            "type": "string"
          }
        }
      },
      "KustomPairFuzzStringObjectInteger": {
        "required": [
          "bar",
          "foo"
        ],
        "type": "object",
        "properties": {
          "bar": {
            "format": "int32",
            "type": "integer"
          },
          "foo": {
            "type": "object",
            "maxLength": 123456,
            "$ref": "#/components/schemas/FuzzStringObject"
          }
        }
      },
      "FuzzKustomPairFuzzStringObjectIntegerDouble": {
        "type": "object",
        "properties": {
          "qAgain": {
            "format": "double",
            "type": "number"
          },
          "qAgain3": {
            "format": "double",
            "type": "number"
          },
          "qValue": {
            "format": "double",
            "description": "Ah, Q, my favourite variable!",
            "type": "number"
          },
          "tAgain2": {
            "$ref": "#/components/schemas/KustomPairFuzzStringObjectInteger"
          },
          "tAgain4": {
            "$ref": "#/components/schemas/KustomPairFuzzStringObjectInteger"
          },
          "tValue": {
            "$ref": "#/components/schemas/KustomPairFuzzStringObjectInteger"
          }
        }
      },
      "FooExtendsFoo": {
        "type": "object",
        "properties": {
          "theQ": {
            "type": "string"
          },
          "theT": {
            "$ref": "#/components/schemas/Bazzy"
          },
          "ultimateTShouldBeQ": {
            "type": "string"
          }
        }
      },
      "FuzzStringExtendsFoo": {
        "type": "object",
        "properties": {
          "qAgain": {
            "$ref": "#/components/schemas/FooExtendsFoo"
          },
          "qAgain3": {
            "$ref": "#/components/schemas/FooExtendsFoo"
          },
          "qValue": {
            "type": "object",
            "description": "Ah, Q, my favourite variable!",
            "$ref": "#/components/schemas/FooExtendsFoo"
          },
          "tAgain2": {
            "type": "string"
          },
          "tAgain4": {
            "type": "string"
          },
          "tValue": {
            "type": "string"
          }
        }
      },
      "KustomPairExtendsStringSuperString": {
        "required": [
          "bar",
          "foo"
        ],
        "type": "object",
        "properties": {
          "bar": {
            
          },
          "foo": {
            "maxLength": 123456,
            "type": "string"
          }
        }
      },
      "KustomPairKustomPairStringStringInteger": {
        "required": [
          "bar",
          "foo"
        ],
        "type": "object",
        "properties": {
          "bar": {
            "format": "int32",
            "type": "integer"
          },
          "foo": {
            "type": "object",
            "maxLength": 123456,
            "$ref": "#/components/schemas/KustomPairStringString"
          }
        }
      },
      "KustomPairStringString": {
        "required": [
          "bar",
          "foo"
        ],
        "type": "object",
        "properties": {
          "bar": {
            "type": "string"
          },
          "foo": {
            "maxLength": 123456,
            "type": "string"
          }
        }
      },
      "BuzzLinkedList": {
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/BuzzLinkedList"
          }
        }
      },
      "KustomPairStringInteger": {
        "required": [
          "bar",
          "foo"
        ],
        "type": "object",
        "properties": {
          "bar": {
            "format": "int32",
            "type": "integer"
          },
          "foo": {
            "maxLength": 123456,
            "type": "string"
          }
        }
      },
      "KitchenSink": {
        "description": "This is the kitchen sink description!",
        "required": [
          "booking",
          "ccList",
          "creditCardMap",
          "fooArray",
          "fuzzListWildcard",
          "seatPreference",
          "unsafeList"
        ],
        "type": "object",
        "properties": {
          "array": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "awkwardMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "awkwardMap2": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BazEnum"
            }
          },
          "barExtends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bar"
            }
          },
          "barSuper": {
            "type": "array",
            "items": {
              
            }
          },
          "bareCollection": {
            "type": "array",
            "items": {
              
            }
          },
          "bareEnum": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "blahMap": {
            "type": "object",
            "additionalProperties": {
              
            }
          },
          "booking": {
            "$ref": "#/components/schemas/Booking"
          },
          "ccList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditCard"
            }
          },
          "complexNesting": {
            "$ref": "#/components/schemas/FuzzKustomPairFuzzStringObjectIntegerDouble"
          },
          "creditCardMap": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CreditCard"
            }
          },
          "customTypeExtendsSuper": {
            "$ref": "#/components/schemas/KustomPairExtendsStringSuperString"
          },
          "foo": {
            "$ref": "#/components/schemas/Foo"
          },
          "fooArray": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bar"
            }
          },
          "fuzzListWildcard": {
            "$ref": "#/components/schemas/FuzzStringExtendsFoo"
          },
          "longArray": {
            "type": "array",
            "items": {
              "format": "int64",
              "type": "integer"
            }
          },
          "nesting": {
            "$ref": "#/components/schemas/KustomPairKustomPairStringStringInteger"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "primitiveFoo": {
            "format": "int32",
            "maximum": 9001,
            "type": "integer"
          },
          "rawArray": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "rootNode": {
            "$ref": "#/components/schemas/BuzzLinkedList"
          },
          "seatPreference": {
            "maxLength": 999,
            "type": "string",
            "examples" : [ "window" ]
          },
          "simpleParameterizedType": {
            "$ref": "#/components/schemas/KustomPairStringInteger"
          },
          "unsafeList": {
            "type": "array",
            "items" : {
            
            }
          },
          "voidField": {
            "type": "object"
          },
          "writeOnlyInteger": {
            "format": "int32",
            "type": "integer",
            "writeOnly": true
          },
          "array2d": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        },
        "examples" : [ "This is the KitchenSink example field in Schema" ],
        "deprecated": true
      }
    }
  }
}
